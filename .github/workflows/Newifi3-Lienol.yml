
name: rm2100-Lienol

on:
# 定时触发
  workflow_dispatch:
  schedule:
    - cron: 0 19 * * 5


env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: 19.07
  DIY_SH: OpenWrt-Lienol.sh
  SSH_ACTIONS: false        # SSH 连接 Actions 功能
  UPLOAD_BIN_DIR: true      # 上传 bin 目录。即包含所有 ipk 文件和固件的目录
  UPLOAD_FIRMWARE: true     # 上传固件的目录
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build_openwrt:
    name: 编译OpenWrt固件
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest

    steps:
    - name: 校验本地文件
      uses: actions/checkout@main

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo docker system prune --all --force --volumns >/dev/null 2>&1
        sudo apt remove docker* >/dev/null 2>&1
        sudo apt update >/dev/null 2>&1
        sudo apt install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar mkisofs >/dev/null 2>&1
        sudo apt autoremove --purge >/dev/null 2>&1
        sudo apt clean >/dev/null 2>&1
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime >/dev/null 2>&1
        sudo df -h

    - name: 克隆源代码
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 更改时区、生成编译时间
      run: |
        sudo timedatectl set-timezone "$TZ"
        echo "FILE_DATE=_$(date +"%Y.%m.%d.%H.%M")" >> $GITHUB_ENV

    - name: 更新源并创建配置文件
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

    #- name: 开启SSH远程连接
      #uses: P3TERX/debugger-action@main
      #if: env.SSH_ACTIONS == 'true'

    - name: 下载软件包
      id: package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: 上传BIN目录
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin_Lienol${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: 上传固件
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_Lienol${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
